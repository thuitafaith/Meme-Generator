{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","assertThisInitialized","genMeme","event","_event$target","target","name","value","setState","defineProperty","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","_this2","fetch","then","response","json","memes","data","className","onSubmit","type","onChange","placeholder","alt","Component","App","src_Header","src_MemeGenerator","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6PAYeA,MAVf,WACI,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,mEACTH,EAAAC,EAAAC,cAAA,4CCsEGE,cAvEX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAO,CACRC,QAAQ,GACRC,WAAW,GACXC,YAAY,gCACZC,YAAY,IAEhBX,EAAKY,aAAaZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAClBA,EAAKe,QAAQf,EAAKe,QAAQF,KAAbZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KATJA,4EAYAgB,GAAM,IAAAC,EACKD,EAAME,OAApBC,EADSF,EACTE,KAAMC,EADGH,EACHG,MACZjB,KAAKkB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACKkB,EAAMC,oCAOPJ,GACJA,EAAMO,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWxB,KAAKI,MAAMI,YAAYiB,QAC5DC,EAAc1B,KAAKI,MAAMI,YAAYa,GAASM,IACpD3B,KAAKkB,SAAS,CAAEX,YAAamB,gDAGd,IAAAE,EAAA5B,KACf6B,MAAM,qCACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAW,IACNE,EAASF,EAASG,KAAlBD,MACPL,EAAKV,SAAS,CACVV,YAAYyB,uCAKxB,OACIzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,YAAYC,SAAUpC,KAAKY,SACvCpB,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,OAAOpB,MAAOjB,KAAKI,MAAMC,QAASiC,SAAUtC,KAAKS,aAAcO,KAAK,UAAUuB,YAAY,aACtG/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,OAAOpB,MAAOjB,KAAKI,MAAME,WAAYgC,SAAUtC,KAAKS,aAAcO,KAAK,aAAauB,YAAY,gBAE5G/C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BAKJF,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,QACX3C,EAAAC,EAAAC,cAAA,OAAKC,IAAKK,KAAKI,MAAMG,YAAaiC,IAAI,KACtChD,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,OAAOnC,KAAKI,MAAMC,SAChCb,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UAAUnC,KAAKI,MAAME,qBAzD3BmC,aCabC,0LATX,OACElD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,cALUH,cCAlBI,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e475d657.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header(){\n    return(\n        <header>\n            <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"/>\n            <h1>MEME GENERATOR</h1>\n        </header>\n    )\n}\n\n\nexport default Header ","import React,{Component} from \"react\"\n\n \n\nclass MemeGenerator extends Component{\n    constructor(){\n        super()\n        this.state ={\n            topText:\"\",\n            bottomText:\"\",\n            randomImage:\"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs:[]\n        }\n        this.handleChange=this.handleChange.bind(this)\n        this.genMeme=this.genMeme.bind(this)\n    }\n\n    handleChange(event){\n        const{name, value} =event.target\n        this.setState({\n            [name]:value\n        })\n\n    }\n     \n\n\n    genMeme(event){\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({ randomImage: randMemeImg })\n        \n    }\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response =>{\n                const {memes} = response.data\n                this.setState({\n                    allMemeImgs:memes \n                })\n            })\n    }\n    render(){\n        return(\n            <div>\n                <form className=\"meme-form\" onSubmit={this.genMeme}>\n                    <input type=\"text\" value={this.state.topText} onChange={this.handleChange} name=\"topText\" placeholder=\"Top Text\"/>\n                    <br/>\n                    <input type=\"text\" value={this.state.bottomText} onChange={this.handleChange} name=\"bottomText\" placeholder=\"Bottom Text\"/>\n                    \n                    <hr/>\n                    <button>GENERATE</button>\n            \n\n                </form>\n                {/* <h1>{this.state.topText} {this.state.bottomText}</h1> */}\n                <div className=\"meme\">\n                    <img src={this.state.randomImage} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\n\n\n\n\n\n\nexport default MemeGenerator","import React, { Component } from 'react';\nimport Header from \"./Header\";\nimport MemeGenerator from \"./MemeGenerator\"\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <MemeGenerator/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}